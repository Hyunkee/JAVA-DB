운영체제 - pc에서 장치들을 쉽게 관리하게 해주는 관리자

window - 한 회사가 수정, 배포 -> 장점 관리 체계적 , 단점 문제해결에 시간이 필요 -> 보안이 취약

linux - 장점 -> 문제해결에 빠르다 ,단점 -> 관리가 체계적이지 못하다.

mac - 애플사 제품에서만 사용 

명령어

CLI(Comand Line Interface) - 명령어를 직접 입력

GUI(Graphic User Interface) - 클릭을 통해 실행

찾기 -> 명령 프롬프트 , cmd 

help를 친 후 명령어 확인 

주로 쓰는 명령어 			

dir : 폴더 내용 확인 

mkdir : 폴더 생성

rmdir : 폴더 삭제

move : 파일이나 폴더 이동

cd 폴더명 : 폴더 들어가기

cd ..  : 폴더에서 나오기(.. : 상위폴더를 의미) (. : 현재폴더를 의미)

.. , .  (점 두개와 점 하나) : 의 차이점을 기억

/ : 하위폴더

cd / : 최상위 폴더로 이동


C:\test\test2\hi2>cd /

C:\>cd ./test/test1/hi1

C:\test\test1\hi1>

1-3 운영체제 핵심 기능 파악

 ① 운영체제 핵심기능
      - 운영체제는 중앙 처리 장치, 메모리, 스토리지, 주변 기기등을 적절히 관리한다

	1. 메모리관리
	    -프로그램의 실행이 종료될 때까지 메모리를 가용한 상태로 유지 및 관리
	2. 프로세스 관리
	    - 기법에는 '일시 중지 및 재실행', '동기화', '통신', '교착상태 처리', '프로세스 생성 삭제

 ② 가상화, 클라우드
	
	1. 가상화
	    - 가상화를 통해 사용자는 하나의 PC에 여러 개의 운영체제(윈도우, 유닉스, 리눅스 등)
	      을 설치하여 개발되는 프로그램을 다양한 환경에서 테스트, 서로 다른 운영체제에서만
	      구동되는 프로그램을 실행시키도록 지원
	2. 클라우드
	    - 인터넷 기반에서 구동되는 컴퓨팅 기술


2-1 데이터베이스 종류 및 선정

      ① 데이터베이스 개요
	-다수의 인원, 시스템 또는 프로그램이 사용할 목적으로 통합하여 관리되는 데이터의 집합
	-자료의 중복성 제거, 무결성 확보, 일관성 유지, 유용성 보장은 데이터베이스 관리의 핵심
	-DBMS(Database Management System)는 위와 같은 데이터 관리의 복잡성을 해결, 데이터
	 변경, 검색, 삭제 및 백업, 복구, 보안 등의 기능을 지원하는 소프트 웨어

       ② 데이터베이스 종료
	- 여러 종류가 있지만 보편적으로 관계형 데이터베이스 관리시스템을 많이 사용한다.

       ③ 데이터베이스 관리시스템 특징
	- 데이터 무결성, 일관성, 회복성, 보안성, 효율성


2-2 관계형 데이터베이스 활용

        ①ERD(E-R Diagram)
	1.ERD 개요
	       -ERD는 업무 분석 결과로 도출된 실체(엔티티)와 엔티티 간의 관계를 도식화한 것
		(1) 엔티티(Entity)(클래스)
		        - 사물 또는 사건으로 정의되며 개체라고도 한다. 엔티티는 사각형으로 나타냄(
		(2) 속성(Attribute)(멤버변수)
		        - 엔티티가 가지고 있는 요소 또는 성질을 속성

         ②ERD 작성
	1. ERD 작성표기
	      - 포스트잇, 전문 소프트우어 등을 사용하여 작성자가 원하는 도구를 사용하여 작성

	2. ERD 최적화
	      - 테이블정의 -> 정규화 수행 -> ERD 관계형 스키마(논리 모델, 물리 모델) 작성

          ③관계형 데이터베이스 테이블 생성
	1. 생성 언어
	      - 데이터베이스의 종류와 상관없이 명령어는 국제 표준으로 제정된 SQL를 사용한다.

2-3 데이터베이스 관리

          ①데이터베이스 기본 연산
	 - CRUD는 데이터베이스가 가지는 기본적인 데이터 처리 기능인 Create(생성), Read(읽기), Update(갱신),
	    Delete(삭제)를 말한다.

		기본 처리		SQL		설명
		Create			Insert		테이블 내 칼럼에 데이터를 추가한다.
		Read			Select		테이블 내 칼럼에 저장된 데이터를 불러온다.
		Update			Updae		테이블 내 칼럼에 저장된 데이터를 수정한다.
		Delete			Delete		테이블 내 칼럼에 저장된 데이터를 삭제한다.


3.1 네트워크 계층 구조 파악
	① 네트워크 개요
	    - 원하는 정보를 원하는 수신자 또는 기기에 정확하게 전송하기 위한 기반 인프라를 네트워크라고한다.
	       정보 전달 시에는 약속한 규칙에 따라야 하는데 이를 프로토콜이라고 한다.
		1.WAN(Wide Area Network)
		   -국가, 대륙과 같이 광범위한 지역을 연결하는 네트워크
			(1) 회선 교환 방식
			    - 물리적 전용선을 활용하여 데이터 전달 경로가 정해진 후 동일 경로로만 전달
			(2) 패킷 교환 방식
			    - 패킷이라는 단위를 사용하여 데이터를 송신하고 수신한다.

	② OSI(Open System Interconnection) 7계층
	    - 국제 표준화 기구인 ISO에서 개발한 네트워크 계층 표현 모델이다. 각 계층은 하위 계층의 기능을
	       이용하여 상위 계층에 기능을 제공한다.        

	계층	계층이름		설명				   	주요 장비 및 기술
	1	물리 계층	실제 장비들을 연결하기 위한 연결 장치  	허브, 리피터		
	2 	데이터 링크 계층	오류와 흐름을 제거하여 신뢰성 		브리지, 스위치
				있는 데이터 를 전송
	3 	네트워크 계층	다수의 중개 시스템 중 올바를 경로를 		라우터
				선택하 도록 지원
	4     	전송 계층 	송신, 수신 프로세스 간의 연결 		TCP/IP UDP 
	5 	세션 계층 	송신, 수신 간의 논리적 연결			호스트(PC 등)
	6 	표현 계층	코드 문자 등을 번역하여 일관되게 전송하고	호스트(PC 등)
				압축, 해제, 보안 기능도 담당
	7 	응용 계층 	사용자 친화 환경 제공(이메일, 웹 등) 		호스트(PC 등)

3-2. 네트워크 프로토콜 파악      
	① 네트워크 프로토콜 개요 
	    -네트워크 프로토콜은 컴퓨터나 원거리 통신 장비 사이에서 메시지를 주고받는 양식과   
	      규칙의 체계이다
	    -IP(Internet Protocol) 주소는 전 세계 컴퓨터에 부여되는 유일한 식별자이다
	    -IPv4는 인터넷 초기부터 현재까지 쓰고 있는 주소 체계이며 000.000.000.000과 같이 12자리
	     로 표시하며 약 43억 개를 부여할 수 있다

	② TCP/IP 프로토콜
	     -TCP/IP이란 TCP와 IP 프로토콜만을 지칭하는 것이 아니라 UDP(User Datagram Protocol), 
	       ICMP(Internet Control Message Protocol), ARP(Address Resolution Protocol), RARP(Reverse 
                  ARP) 등 관련된 프로토콜을 통칭한다


4-2. 개발도구 설치 및 운용 
	① 프로그래밍 언어 
	    -다양한 프로그래밍 언어를 선택하는 것은 시스템 개발 및 운영에 매우 중요하다. 언어를 
	     선택함에 있어 다음 사항 등을 고려한다. 

	종류 	타입 	목적 	언어 특징 	지원 도구
	JAVA 	정적 	일반 	객체 지향, 명령형 	존재
	C# 	정적 	일반 	객체 지향, 명령형 	존재
	VB.NET 	정적 	일반 	객체 지향, 명령형 	존재
	C++ 	정적 	일반 	순차적, 명령형 	존재하지 않음
	Perl 	동적 	일반 	순차적, 명령형 	존재
	COBOL 	정적 	일반 	순차적, 명령형 	존재
	SQL 	동적 	데이터 처리 선언형 	존재
	ABAP 	정적 	일반 	객체 지향, 명령형 	존재
	PHP 	동적 	일반 	순차적, 명령형 	존재
	Python 	동적 	일반 	순차적, 명령형 	존재





