복습내용

배열 
 - 같은 의미 + 같은 자료형의 변수들을 모아 놓은 것
 - 참조변수 : 주소를 저장
 - 0번지부터 배열의 크기 -1번지 까지 
	=> ArrayIndexOutOfBoundsException

메소드
 - 하나의 특정 기능을 모아놓은 코드
 - 매개변수 : 기능을 실행하기 위해서 필요한 정보
 - 리턴타입 : 기능이 실행하고 나서 돌려주는 정보
 - 매개변수는 인자(인수)를 복사해서 사용
 - 일반변수 vs 참조변수
 - 메소드에서 매개변수를 참조변수로 사용하면 원본이 바뀜
 - 메소드에서 매개변수를 일반변수로 사용하면 원본이 안바뀜
 - 메소드 오버로딩 : 동일한 메소드명을 가진 메소드가 여러개
 1. 매개변수의 갯수가 같지만 자료형이 다른경우
 2. 매개변수의 갯수가 다른 경우

클래스
 - 멤버 변수(부품,요소)와 멤버 메소드(기능)
 - 생성자 : 멤버변수를 초기화
 - 생성자 오버로딩
 - 기본생성자 : 매개변수가 없는 생성자
 - 복사생성자 : 매개변수가 나와 같은 클래스의 객체인 생성자
 - 설계도
객체
 - 제품
 - 참조변수

static 멤버 변수(class)와 객체 멤버 변수
클래스 멤버 변수 : 객체 생성 없이 클래스이름.멤버변수로 사용 가능
일반 멤버 변수 : 객체를 생성하고 객체이름.멤버변수로 사용 가능

오늘수업

상속을 받으면 부모 클래스에 있는 멤버 변수와 메소드를 물려받는다.
하지만 다 접근할 수 있는것은 아니다.
접근 제한자가 private면 자식 클래스에서 접근할 수 없다.

is a  관계가 성립하면 상속을 할 수 있다.
기아자동차는 자동차이다라는 말이 성립하면
기아자동차는 자동차를 상속받을 수 있고
성립하지 않는다면 상속 받을 수 없다.

has a 관계가 성립하면 포함할 수 있다.

class Circle{
	Point center;
}
class Point{}

클래스의 상속 : 부모클래스의 멤버 변수와 멤버 메소드를 물려 받는 것(재사용)
자식 클래스에서 부모클래스에 접근 할 수 있는 제한자
 : protected, public
상속이 가능한가 ?  is a 관계

포함 : 다른 클래스의 객체가 내 멤버 변수로 오는 상황
포함이 가능한가 ? has a 관계

Q. Point 클래스에서 사용한 내용들을 무엇이 있을까요? 
	class, 접근제한자private, 메소드, getter와setter, 재귀호출,메소드 오버로딩

인터페이스를 사용하는 이유
1. 클래스의 기능을 한눈에 볼 수 있다.
2. 여러 개발자가 동시에 개발하는 경우 표준화를 시킨다.

클래스 : 1층 설계도가 다 그려짐
추상클래스 : 1층설계도 인데 화장실만 안그려짐
인터페이스 : 1층 설계도인데 방갯수, 화장실 갯수, 거실 갯수만 표시

상속 - is a
포함 - has a
클래스 상속은 단일 상속
object는 조상 클래스
오버라이딩 - 부모클래스의 메소드 재정의
super - 부모클래스, super()

제어자
다형성 - 하나로 여러 타입을 커버
참조변수의 형변환
 - 자손 -> 부모 : 자동
 - 부모 -> 자손 : 명시적(조건적으로 가능)
//가능한경우
ex)   Shape s = new Rect();
       Rect r = (Rect)s;
//불가능한경우
ex)   Shape s = new Shape();
       Rect r = (Rect)s;


instanceof 연산자 - 형변환 가능 여부를 알려주는 연산자
매개변수의 다형성
 - 매개변수를 잘 선정하여 다른 매개변수가 올 때도 동일하게 처리
추상클래스 - 추상메소드를 포함한 클래스
추상메소드 - 선언부만 있는 메소드
추상클래스를 상속받으면 반드시 추상 메소드를 구현
인터페이스 - 추상메소드와 상수(클래스 멤버변수)로만 이루어짐
인터페이스는 다중 상속이 가능
인터페이스의 구현 - implements를 이용하여 인터페이스를 구현